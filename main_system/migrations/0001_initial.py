# Generated by Django 3.1.3 on 2020-11-27 18:51

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0003_taggeditem_add_unique_index'),
    ]

    operations = [
        migrations.CreateModel(
            name='Catering',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('with_local_only', models.BooleanField(default=False)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField(max_length=100, unique_for_date='added')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=20)),
                ('website', models.URLField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Local',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField(max_length=100, unique_for_date='added')),
                ('catering', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main_system.catering')),
                ('contact', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main_system.contact')),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voivodeship', models.CharField(max_length=100)),
                ('district', models.CharField(max_length=100)),
                ('town', models.CharField(max_length=100)),
                ('street', models.CharField(max_length=100)),
                ('local_number', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='OtherProvider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('slug', models.SlugField(max_length=100, unique_for_date='added')),
                ('contact', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main_system.contact')),
                ('location', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main_system.location')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_people', models.IntegerField(blank=True, null=True)),
                ('cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('offer_name', models.CharField(max_length=100)),
                ('offer_description', models.TextField(blank=True, null=True)),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('slug', models.SlugField(max_length=100, unique_for_date='added')),
                ('catering', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_system.catering')),
                ('local', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_system.local')),
                ('other_provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_system.otherprovider')),
            ],
        ),
        migrations.AddField(
            model_name='local',
            name='location',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main_system.location'),
        ),
        migrations.AddField(
            model_name='local',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('body', models.TextField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('catering', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='main_system.catering')),
                ('local', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='main_system.local')),
                ('other_provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='main_system.otherprovider')),
            ],
            options={
                'ordering': ('created',),
            },
        ),
        migrations.AddField(
            model_name='catering',
            name='contact',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main_system.contact'),
        ),
        migrations.AddField(
            model_name='catering',
            name='location',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main_system.location'),
        ),
        migrations.AddField(
            model_name='catering',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
